{
  "info": {
    "name": "ProteinLM",
    "full_name": "THUDM/ProteinLM",
    "description": "Protein Language Model",
    "stars": 111,
    "forks": 20,
    "watchers": 111,
    "language": "Python",
    "created_at": "2021-04-23 03:24:08+00:00",
    "updated_at": "2024-09-03 21:34:56+00:00",
    "default_branch": "main",
    "open_issues": 2,
    "license": "Apache License 2.0"
  },
  "structure": [
    {
      "type": "file",
      "name": ".gitignore",
      "path": ".gitignore",
      "extension": "no_extension"
    },
    {
      "type": "file",
      "name": "LICENSE",
      "path": "LICENSE",
      "extension": "no_extension"
    },
    {
      "type": "file",
      "name": "README.md",
      "path": "README.md",
      "extension": ".md"
    },
    {
      "type": "directory",
      "name": "pretrain",
      "path": "pretrain",
      "contents": [
        {
          "type": "file",
          "name": ".gitignore",
          "path": "pretrain/.gitignore",
          "extension": "no_extension"
        },
        {
          "type": "file",
          "name": "MANIFEST.in",
          "path": "pretrain/MANIFEST.in",
          "extension": ".in"
        },
        {
          "type": "file",
          "name": "Megatron.LICENSE",
          "path": "pretrain/Megatron.LICENSE",
          "extension": ".license"
        },
        {
          "type": "file",
          "name": "README.md",
          "path": "pretrain/README.md",
          "extension": ".md"
        },
        {
          "type": "directory",
          "name": "examples",
          "path": "pretrain/examples",
          "contents": [
            {
              "type": "file",
              "name": "evaluate_zeroshot_gpt.sh",
              "path": "pretrain/examples/evaluate_zeroshot_gpt.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "finetune_mnli_distributed.sh",
              "path": "pretrain/examples/finetune_mnli_distributed.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "finetune_race_distributed.sh",
              "path": "pretrain/examples/finetune_race_distributed.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "generate_text.sh",
              "path": "pretrain/examples/generate_text.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "merge_mp_bert.sh",
              "path": "pretrain/examples/merge_mp_bert.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_bert.sh",
              "path": "pretrain/examples/pretrain_bert.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_bert_distributed.sh",
              "path": "pretrain/examples/pretrain_bert_distributed.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_bert_distributed_with_mp.sh",
              "path": "pretrain/examples/pretrain_bert_distributed_with_mp.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_gpt.sh",
              "path": "pretrain/examples/pretrain_gpt.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_gpt3_175B.sh",
              "path": "pretrain/examples/pretrain_gpt3_175B.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_gpt_distributed.sh",
              "path": "pretrain/examples/pretrain_gpt_distributed.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_gpt_distributed_with_mp.sh",
              "path": "pretrain/examples/pretrain_gpt_distributed_with_mp.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_tape.sh",
              "path": "pretrain/examples/pretrain_tape.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_tape_distributed.sh",
              "path": "pretrain/examples/pretrain_tape_distributed.sh",
              "extension": ".sh"
            }
          ]
        },
        {
          "type": "directory",
          "name": "images",
          "path": "pretrain/images",
          "contents": [
            {
              "type": "file",
              "name": "Makefile",
              "path": "pretrain/images/Makefile",
              "extension": "no_extension"
            },
            {
              "type": "file",
              "name": "cases_jan2021.png",
              "path": "pretrain/images/cases_jan2021.png",
              "extension": ".png"
            },
            {
              "type": "file",
              "name": "scaling.png",
              "path": "pretrain/images/scaling.png",
              "extension": ".png"
            },
            {
              "type": "file",
              "name": "tables.tex",
              "path": "pretrain/images/tables.tex",
              "extension": ".tex"
            }
          ]
        },
        {
          "type": "directory",
          "name": "megatron",
          "path": "pretrain/megatron",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "arguments.py",
              "path": "pretrain/megatron/arguments.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "checkpointing.py",
              "path": "pretrain/megatron/checkpointing.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "data",
              "path": "pretrain/megatron/data",
              "contents": [
                {
                  "type": "file",
                  "name": "Makefile",
                  "path": "pretrain/megatron/data/Makefile",
                  "extension": "no_extension"
                },
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/data/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "bert_dataset.py",
                  "path": "pretrain/megatron/data/bert_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "blendable_dataset.py",
                  "path": "pretrain/megatron/data/blendable_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "data_loaders.py",
                  "path": "pretrain/megatron/data/data_loaders.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "dataset_utils.py",
                  "path": "pretrain/megatron/data/dataset_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "gpt_dataset.py",
                  "path": "pretrain/megatron/data/gpt_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "helpers.cpp",
                  "path": "pretrain/megatron/data/helpers.cpp",
                  "extension": ".cpp"
                },
                {
                  "type": "file",
                  "name": "ict_dataset.py",
                  "path": "pretrain/megatron/data/ict_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "indexed_dataset.py",
                  "path": "pretrain/megatron/data/indexed_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "realm_dataset_utils.py",
                  "path": "pretrain/megatron/data/realm_dataset_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "realm_index.py",
                  "path": "pretrain/megatron/data/realm_index.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "tape_dataset.py",
                  "path": "pretrain/megatron/data/tape_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "directory",
                  "name": "test",
                  "path": "pretrain/megatron/data/test",
                  "contents": [
                    {
                      "type": "file",
                      "name": "test_indexed_dataset.py",
                      "path": "pretrain/megatron/data/test/test_indexed_dataset.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "test_preprocess_data.sh",
                      "path": "pretrain/megatron/data/test/test_preprocess_data.sh",
                      "extension": ".sh"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directory",
              "name": "fp16_deprecated",
              "path": "pretrain/megatron/fp16_deprecated",
              "contents": [
                {
                  "type": "file",
                  "name": "loss_scaler.py",
                  "path": "pretrain/megatron/fp16_deprecated/loss_scaler.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "directory",
              "name": "fused_kernels",
              "path": "pretrain/megatron/fused_kernels",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/fused_kernels/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "compat.h",
                  "path": "pretrain/megatron/fused_kernels/compat.h",
                  "extension": ".h"
                },
                {
                  "type": "file",
                  "name": "layer_norm_cuda.cpp",
                  "path": "pretrain/megatron/fused_kernels/layer_norm_cuda.cpp",
                  "extension": ".cpp"
                },
                {
                  "type": "file",
                  "name": "layer_norm_cuda_kernel.cu",
                  "path": "pretrain/megatron/fused_kernels/layer_norm_cuda_kernel.cu",
                  "extension": ".cu"
                },
                {
                  "type": "file",
                  "name": "scaled_masked_softmax.cpp",
                  "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.cpp",
                  "extension": ".cpp"
                },
                {
                  "type": "file",
                  "name": "scaled_masked_softmax.h",
                  "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.h",
                  "extension": ".h"
                },
                {
                  "type": "file",
                  "name": "scaled_masked_softmax_cuda.cu",
                  "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax_cuda.cu",
                  "extension": ".cu"
                },
                {
                  "type": "file",
                  "name": "scaled_upper_triang_masked_softmax.cpp",
                  "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.cpp",
                  "extension": ".cpp"
                },
                {
                  "type": "file",
                  "name": "scaled_upper_triang_masked_softmax.h",
                  "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.h",
                  "extension": ".h"
                },
                {
                  "type": "file",
                  "name": "scaled_upper_triang_masked_softmax_cuda.cu",
                  "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax_cuda.cu",
                  "extension": ".cu"
                },
                {
                  "type": "file",
                  "name": "type_shim.h",
                  "path": "pretrain/megatron/fused_kernels/type_shim.h",
                  "extension": ".h"
                }
              ]
            },
            {
              "type": "file",
              "name": "global_vars.py",
              "path": "pretrain/megatron/global_vars.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "indexer.py",
              "path": "pretrain/megatron/indexer.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "initialize.py",
              "path": "pretrain/megatron/initialize.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "learning_rates.py",
              "path": "pretrain/megatron/learning_rates.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "memory.py",
              "path": "pretrain/megatron/memory.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "microbatches.py",
              "path": "pretrain/megatron/microbatches.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "model",
              "path": "pretrain/megatron/model",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/model/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "bert_model.py",
                  "path": "pretrain/megatron/model/bert_model.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "classification.py",
                  "path": "pretrain/megatron/model/classification.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "distributed.py",
                  "path": "pretrain/megatron/model/distributed.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "fused_bias_gelu.py",
                  "path": "pretrain/megatron/model/fused_bias_gelu.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "fused_layer_norm.py",
                  "path": "pretrain/megatron/model/fused_layer_norm.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "fused_softmax.py",
                  "path": "pretrain/megatron/model/fused_softmax.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "gpt_model.py",
                  "path": "pretrain/megatron/model/gpt_model.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "language_model.py",
                  "path": "pretrain/megatron/model/language_model.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "module.py",
                  "path": "pretrain/megatron/model/module.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "multiple_choice.py",
                  "path": "pretrain/megatron/model/multiple_choice.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "realm_model.py",
                  "path": "pretrain/megatron/model/realm_model.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "token_classification.py",
                  "path": "pretrain/megatron/model/token_classification.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "token_pair_classification.py",
                  "path": "pretrain/megatron/model/token_pair_classification.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "transformer.py",
                  "path": "pretrain/megatron/model/transformer.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "utils.py",
                  "path": "pretrain/megatron/model/utils.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "directory",
              "name": "mpu",
              "path": "pretrain/megatron/mpu",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/mpu/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "cross_entropy.py",
                  "path": "pretrain/megatron/mpu/cross_entropy.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "data.py",
                  "path": "pretrain/megatron/mpu/data.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "initialize.py",
                  "path": "pretrain/megatron/mpu/initialize.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "layers.py",
                  "path": "pretrain/megatron/mpu/layers.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "mappings.py",
                  "path": "pretrain/megatron/mpu/mappings.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "random.py",
                  "path": "pretrain/megatron/mpu/random.py",
                  "extension": ".py"
                },
                {
                  "type": "directory",
                  "name": "tests",
                  "path": "pretrain/megatron/mpu/tests",
                  "contents": [
                    {
                      "type": "file",
                      "name": "__init__.py",
                      "path": "pretrain/megatron/mpu/tests/__init__.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "commons.py",
                      "path": "pretrain/megatron/mpu/tests/commons.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "test_cross_entropy.py",
                      "path": "pretrain/megatron/mpu/tests/test_cross_entropy.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "test_data.py",
                      "path": "pretrain/megatron/mpu/tests/test_data.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "test_initialize.py",
                      "path": "pretrain/megatron/mpu/tests/test_initialize.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "test_layers.py",
                      "path": "pretrain/megatron/mpu/tests/test_layers.py",
                      "extension": ".py"
                    },
                    {
                      "type": "file",
                      "name": "test_random.py",
                      "path": "pretrain/megatron/mpu/tests/test_random.py",
                      "extension": ".py"
                    }
                  ]
                },
                {
                  "type": "file",
                  "name": "utils.py",
                  "path": "pretrain/megatron/mpu/utils.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "directory",
              "name": "optimizer",
              "path": "pretrain/megatron/optimizer",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/optimizer/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "clip_grads.py",
                  "path": "pretrain/megatron/optimizer/clip_grads.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "grad_scaler.py",
                  "path": "pretrain/megatron/optimizer/grad_scaler.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "optimizer.py",
                  "path": "pretrain/megatron/optimizer/optimizer.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "package_info.py",
              "path": "pretrain/megatron/package_info.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "text_generation_utils.py",
              "path": "pretrain/megatron/text_generation_utils.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "tokenizer",
              "path": "pretrain/megatron/tokenizer",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/tokenizer/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "bert_tokenization.py",
                  "path": "pretrain/megatron/tokenizer/bert_tokenization.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "gpt2_tokenization.py",
                  "path": "pretrain/megatron/tokenizer/gpt2_tokenization.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "tokenizer.py",
                  "path": "pretrain/megatron/tokenizer/tokenizer.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "training.py",
              "path": "pretrain/megatron/training.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "utils.py",
              "path": "pretrain/megatron/utils.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "pretrain_tape.py",
          "path": "pretrain/pretrain_tape.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "pretrain_tools",
          "path": "pretrain/pretrain_tools",
          "contents": [
            {
              "type": "file",
              "name": "README.md",
              "path": "pretrain/pretrain_tools/README.md",
              "extension": ".md"
            },
            {
              "type": "file",
              "name": "mpirun_hidden1024_layer16_head16.sh",
              "path": "pretrain/pretrain_tools/mpirun_hidden1024_layer16_head16.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "pretrain_tape_distributed_hidden1024_layer16_head16.sh",
              "path": "pretrain/pretrain_tools/pretrain_tape_distributed_hidden1024_layer16_head16.sh",
              "extension": ".sh"
            }
          ]
        },
        {
          "type": "directory",
          "name": "protein_tools",
          "path": "pretrain/protein_tools",
          "contents": [
            {
              "type": "file",
              "name": "README.md",
              "path": "pretrain/protein_tools/README.md",
              "extension": ".md"
            },
            {
              "type": "file",
              "name": "iupac_vocab.txt",
              "path": "pretrain/protein_tools/iupac_vocab.txt",
              "extension": ".txt"
            },
            {
              "type": "file",
              "name": "lmdb2tab.py",
              "path": "pretrain/protein_tools/lmdb2tab.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "pfam2json.sh",
              "path": "pretrain/protein_tools/pfam2json.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "preprocess_tape.sh",
              "path": "pretrain/protein_tools/preprocess_tape.sh",
              "extension": ".sh"
            }
          ]
        },
        {
          "type": "file",
          "name": "requirements.txt",
          "path": "pretrain/requirements.txt",
          "extension": ".txt"
        },
        {
          "type": "file",
          "name": "setup.py",
          "path": "pretrain/setup.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "tasks",
          "path": "pretrain/tasks",
          "contents": [
            {
              "type": "file",
              "name": "data_utils.py",
              "path": "pretrain/tasks/data_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "ensemble_classifier.py",
              "path": "pretrain/tasks/ensemble_classifier.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "eval_utils.py",
              "path": "pretrain/tasks/eval_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "finetune_utils.py",
              "path": "pretrain/tasks/finetune_utils.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "glue",
              "path": "pretrain/tasks/glue",
              "contents": [
                {
                  "type": "file",
                  "name": "data.py",
                  "path": "pretrain/tasks/glue/data.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "finetune.py",
                  "path": "pretrain/tasks/glue/finetune.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "mnli.py",
                  "path": "pretrain/tasks/glue/mnli.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "qqp.py",
                  "path": "pretrain/tasks/glue/qqp.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "main.py",
              "path": "pretrain/tasks/main.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "protein",
              "path": "pretrain/tasks/protein",
              "contents": [
                {
                  "type": "file",
                  "name": "contact_prediction.py",
                  "path": "pretrain/tasks/protein/contact_prediction.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "data.py",
                  "path": "pretrain/tasks/protein/data.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "eval_utils.py",
                  "path": "pretrain/tasks/protein/eval_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "finetune.py",
                  "path": "pretrain/tasks/protein/finetune.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "finetune_utils.py",
                  "path": "pretrain/tasks/protein/finetune_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "fluorescence.py",
                  "path": "pretrain/tasks/protein/fluorescence.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "remote_homology.py",
                  "path": "pretrain/tasks/protein/remote_homology.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "secondary_structure.py",
                  "path": "pretrain/tasks/protein/secondary_structure.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "stability.py",
                  "path": "pretrain/tasks/protein/stability.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "directory",
              "name": "race",
              "path": "pretrain/tasks/race",
              "contents": [
                {
                  "type": "file",
                  "name": "data.py",
                  "path": "pretrain/tasks/race/data.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "finetune.py",
                  "path": "pretrain/tasks/race/finetune.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "directory",
              "name": "zeroshot_gpt2",
              "path": "pretrain/tasks/zeroshot_gpt2",
              "contents": [
                {
                  "type": "file",
                  "name": "datasets.py",
                  "path": "pretrain/tasks/zeroshot_gpt2/datasets.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "detokenizer.py",
                  "path": "pretrain/tasks/zeroshot_gpt2/detokenizer.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "evaluate.py",
                  "path": "pretrain/tasks/zeroshot_gpt2/evaluate.py",
                  "extension": ".py"
                }
              ]
            }
          ]
        },
        {
          "type": "directory",
          "name": "tools",
          "path": "pretrain/tools",
          "contents": [
            {
              "type": "file",
              "name": "create_doc_index.py",
              "path": "pretrain/tools/create_doc_index.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "generate_samples_gpt.py",
              "path": "pretrain/tools/generate_samples_gpt.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "linter.py",
              "path": "pretrain/tools/linter.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "merge_mp_partitions.py",
              "path": "pretrain/tools/merge_mp_partitions.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "openwebtext",
              "path": "pretrain/tools/openwebtext",
              "contents": [
                {
                  "type": "file",
                  "name": "README.md",
                  "path": "pretrain/tools/openwebtext/README.md",
                  "extension": ".md"
                },
                {
                  "type": "file",
                  "name": "blacklist_urls.py",
                  "path": "pretrain/tools/openwebtext/blacklist_urls.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "cleanup_dataset.py",
                  "path": "pretrain/tools/openwebtext/cleanup_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "find_duplicates.py",
                  "path": "pretrain/tools/openwebtext/find_duplicates.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "group_duplicate_url.py",
                  "path": "pretrain/tools/openwebtext/group_duplicate_url.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "merge_jsons.py",
                  "path": "pretrain/tools/openwebtext/merge_jsons.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "remove_group_duplicates.py",
                  "path": "pretrain/tools/openwebtext/remove_group_duplicates.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "preprocess_data.py",
              "path": "pretrain/tools/preprocess_data.py",
              "extension": ".py"
            }
          ]
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/.gitignore",
      "path": "pretrain/.gitignore",
      "extension": "no_extension"
    },
    {
      "type": "file",
      "name": "pretrain/MANIFEST.in",
      "path": "pretrain/MANIFEST.in",
      "extension": ".in"
    },
    {
      "type": "file",
      "name": "pretrain/Megatron.LICENSE",
      "path": "pretrain/Megatron.LICENSE",
      "extension": ".license"
    },
    {
      "type": "file",
      "name": "pretrain/README.md",
      "path": "pretrain/README.md",
      "extension": ".md"
    },
    {
      "type": "directory",
      "name": "pretrain/examples",
      "path": "pretrain/examples",
      "contents": [
        {
          "type": "file",
          "name": "evaluate_zeroshot_gpt.sh",
          "path": "pretrain/examples/evaluate_zeroshot_gpt.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "finetune_mnli_distributed.sh",
          "path": "pretrain/examples/finetune_mnli_distributed.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "finetune_race_distributed.sh",
          "path": "pretrain/examples/finetune_race_distributed.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "generate_text.sh",
          "path": "pretrain/examples/generate_text.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "merge_mp_bert.sh",
          "path": "pretrain/examples/merge_mp_bert.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_bert.sh",
          "path": "pretrain/examples/pretrain_bert.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_bert_distributed.sh",
          "path": "pretrain/examples/pretrain_bert_distributed.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_bert_distributed_with_mp.sh",
          "path": "pretrain/examples/pretrain_bert_distributed_with_mp.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_gpt.sh",
          "path": "pretrain/examples/pretrain_gpt.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_gpt3_175B.sh",
          "path": "pretrain/examples/pretrain_gpt3_175B.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_gpt_distributed.sh",
          "path": "pretrain/examples/pretrain_gpt_distributed.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_gpt_distributed_with_mp.sh",
          "path": "pretrain/examples/pretrain_gpt_distributed_with_mp.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_tape.sh",
          "path": "pretrain/examples/pretrain_tape.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_tape_distributed.sh",
          "path": "pretrain/examples/pretrain_tape_distributed.sh",
          "extension": ".sh"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/examples/evaluate_zeroshot_gpt.sh",
      "path": "pretrain/examples/evaluate_zeroshot_gpt.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/finetune_mnli_distributed.sh",
      "path": "pretrain/examples/finetune_mnli_distributed.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/finetune_race_distributed.sh",
      "path": "pretrain/examples/finetune_race_distributed.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/generate_text.sh",
      "path": "pretrain/examples/generate_text.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/merge_mp_bert.sh",
      "path": "pretrain/examples/merge_mp_bert.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_bert.sh",
      "path": "pretrain/examples/pretrain_bert.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_bert_distributed.sh",
      "path": "pretrain/examples/pretrain_bert_distributed.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_bert_distributed_with_mp.sh",
      "path": "pretrain/examples/pretrain_bert_distributed_with_mp.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_gpt.sh",
      "path": "pretrain/examples/pretrain_gpt.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_gpt3_175B.sh",
      "path": "pretrain/examples/pretrain_gpt3_175B.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_gpt_distributed.sh",
      "path": "pretrain/examples/pretrain_gpt_distributed.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_gpt_distributed_with_mp.sh",
      "path": "pretrain/examples/pretrain_gpt_distributed_with_mp.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_tape.sh",
      "path": "pretrain/examples/pretrain_tape.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/examples/pretrain_tape_distributed.sh",
      "path": "pretrain/examples/pretrain_tape_distributed.sh",
      "extension": ".sh"
    },
    {
      "type": "directory",
      "name": "pretrain/images",
      "path": "pretrain/images",
      "contents": [
        {
          "type": "file",
          "name": "Makefile",
          "path": "pretrain/images/Makefile",
          "extension": "no_extension"
        },
        {
          "type": "file",
          "name": "cases_jan2021.png",
          "path": "pretrain/images/cases_jan2021.png",
          "extension": ".png"
        },
        {
          "type": "file",
          "name": "scaling.png",
          "path": "pretrain/images/scaling.png",
          "extension": ".png"
        },
        {
          "type": "file",
          "name": "tables.tex",
          "path": "pretrain/images/tables.tex",
          "extension": ".tex"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/images/Makefile",
      "path": "pretrain/images/Makefile",
      "extension": "no_extension"
    },
    {
      "type": "file",
      "name": "pretrain/images/cases_jan2021.png",
      "path": "pretrain/images/cases_jan2021.png",
      "extension": ".png"
    },
    {
      "type": "file",
      "name": "pretrain/images/scaling.png",
      "path": "pretrain/images/scaling.png",
      "extension": ".png"
    },
    {
      "type": "file",
      "name": "pretrain/images/tables.tex",
      "path": "pretrain/images/tables.tex",
      "extension": ".tex"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron",
      "path": "pretrain/megatron",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "arguments.py",
          "path": "pretrain/megatron/arguments.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "checkpointing.py",
          "path": "pretrain/megatron/checkpointing.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "data",
          "path": "pretrain/megatron/data",
          "contents": [
            {
              "type": "file",
              "name": "Makefile",
              "path": "pretrain/megatron/data/Makefile",
              "extension": "no_extension"
            },
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/data/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "bert_dataset.py",
              "path": "pretrain/megatron/data/bert_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "blendable_dataset.py",
              "path": "pretrain/megatron/data/blendable_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "data_loaders.py",
              "path": "pretrain/megatron/data/data_loaders.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "dataset_utils.py",
              "path": "pretrain/megatron/data/dataset_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "gpt_dataset.py",
              "path": "pretrain/megatron/data/gpt_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "helpers.cpp",
              "path": "pretrain/megatron/data/helpers.cpp",
              "extension": ".cpp"
            },
            {
              "type": "file",
              "name": "ict_dataset.py",
              "path": "pretrain/megatron/data/ict_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "indexed_dataset.py",
              "path": "pretrain/megatron/data/indexed_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "realm_dataset_utils.py",
              "path": "pretrain/megatron/data/realm_dataset_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "realm_index.py",
              "path": "pretrain/megatron/data/realm_index.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "tape_dataset.py",
              "path": "pretrain/megatron/data/tape_dataset.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "test",
              "path": "pretrain/megatron/data/test",
              "contents": [
                {
                  "type": "file",
                  "name": "test_indexed_dataset.py",
                  "path": "pretrain/megatron/data/test/test_indexed_dataset.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "test_preprocess_data.sh",
                  "path": "pretrain/megatron/data/test/test_preprocess_data.sh",
                  "extension": ".sh"
                }
              ]
            }
          ]
        },
        {
          "type": "directory",
          "name": "fp16_deprecated",
          "path": "pretrain/megatron/fp16_deprecated",
          "contents": [
            {
              "type": "file",
              "name": "loss_scaler.py",
              "path": "pretrain/megatron/fp16_deprecated/loss_scaler.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "directory",
          "name": "fused_kernels",
          "path": "pretrain/megatron/fused_kernels",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/fused_kernels/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "compat.h",
              "path": "pretrain/megatron/fused_kernels/compat.h",
              "extension": ".h"
            },
            {
              "type": "file",
              "name": "layer_norm_cuda.cpp",
              "path": "pretrain/megatron/fused_kernels/layer_norm_cuda.cpp",
              "extension": ".cpp"
            },
            {
              "type": "file",
              "name": "layer_norm_cuda_kernel.cu",
              "path": "pretrain/megatron/fused_kernels/layer_norm_cuda_kernel.cu",
              "extension": ".cu"
            },
            {
              "type": "file",
              "name": "scaled_masked_softmax.cpp",
              "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.cpp",
              "extension": ".cpp"
            },
            {
              "type": "file",
              "name": "scaled_masked_softmax.h",
              "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.h",
              "extension": ".h"
            },
            {
              "type": "file",
              "name": "scaled_masked_softmax_cuda.cu",
              "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax_cuda.cu",
              "extension": ".cu"
            },
            {
              "type": "file",
              "name": "scaled_upper_triang_masked_softmax.cpp",
              "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.cpp",
              "extension": ".cpp"
            },
            {
              "type": "file",
              "name": "scaled_upper_triang_masked_softmax.h",
              "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.h",
              "extension": ".h"
            },
            {
              "type": "file",
              "name": "scaled_upper_triang_masked_softmax_cuda.cu",
              "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax_cuda.cu",
              "extension": ".cu"
            },
            {
              "type": "file",
              "name": "type_shim.h",
              "path": "pretrain/megatron/fused_kernels/type_shim.h",
              "extension": ".h"
            }
          ]
        },
        {
          "type": "file",
          "name": "global_vars.py",
          "path": "pretrain/megatron/global_vars.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "indexer.py",
          "path": "pretrain/megatron/indexer.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "initialize.py",
          "path": "pretrain/megatron/initialize.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "learning_rates.py",
          "path": "pretrain/megatron/learning_rates.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "memory.py",
          "path": "pretrain/megatron/memory.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "microbatches.py",
          "path": "pretrain/megatron/microbatches.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "model",
          "path": "pretrain/megatron/model",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/model/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "bert_model.py",
              "path": "pretrain/megatron/model/bert_model.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "classification.py",
              "path": "pretrain/megatron/model/classification.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "distributed.py",
              "path": "pretrain/megatron/model/distributed.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "fused_bias_gelu.py",
              "path": "pretrain/megatron/model/fused_bias_gelu.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "fused_layer_norm.py",
              "path": "pretrain/megatron/model/fused_layer_norm.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "fused_softmax.py",
              "path": "pretrain/megatron/model/fused_softmax.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "gpt_model.py",
              "path": "pretrain/megatron/model/gpt_model.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "language_model.py",
              "path": "pretrain/megatron/model/language_model.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "module.py",
              "path": "pretrain/megatron/model/module.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "multiple_choice.py",
              "path": "pretrain/megatron/model/multiple_choice.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "realm_model.py",
              "path": "pretrain/megatron/model/realm_model.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "token_classification.py",
              "path": "pretrain/megatron/model/token_classification.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "token_pair_classification.py",
              "path": "pretrain/megatron/model/token_pair_classification.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "transformer.py",
              "path": "pretrain/megatron/model/transformer.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "utils.py",
              "path": "pretrain/megatron/model/utils.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "directory",
          "name": "mpu",
          "path": "pretrain/megatron/mpu",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/mpu/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "cross_entropy.py",
              "path": "pretrain/megatron/mpu/cross_entropy.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "data.py",
              "path": "pretrain/megatron/mpu/data.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "initialize.py",
              "path": "pretrain/megatron/mpu/initialize.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "layers.py",
              "path": "pretrain/megatron/mpu/layers.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "mappings.py",
              "path": "pretrain/megatron/mpu/mappings.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "random.py",
              "path": "pretrain/megatron/mpu/random.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "tests",
              "path": "pretrain/megatron/mpu/tests",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "pretrain/megatron/mpu/tests/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "commons.py",
                  "path": "pretrain/megatron/mpu/tests/commons.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "test_cross_entropy.py",
                  "path": "pretrain/megatron/mpu/tests/test_cross_entropy.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "test_data.py",
                  "path": "pretrain/megatron/mpu/tests/test_data.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "test_initialize.py",
                  "path": "pretrain/megatron/mpu/tests/test_initialize.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "test_layers.py",
                  "path": "pretrain/megatron/mpu/tests/test_layers.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "test_random.py",
                  "path": "pretrain/megatron/mpu/tests/test_random.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "utils.py",
              "path": "pretrain/megatron/mpu/utils.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "directory",
          "name": "optimizer",
          "path": "pretrain/megatron/optimizer",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/optimizer/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "clip_grads.py",
              "path": "pretrain/megatron/optimizer/clip_grads.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "grad_scaler.py",
              "path": "pretrain/megatron/optimizer/grad_scaler.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "optimizer.py",
              "path": "pretrain/megatron/optimizer/optimizer.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "package_info.py",
          "path": "pretrain/megatron/package_info.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "text_generation_utils.py",
          "path": "pretrain/megatron/text_generation_utils.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "tokenizer",
          "path": "pretrain/megatron/tokenizer",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/tokenizer/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "bert_tokenization.py",
              "path": "pretrain/megatron/tokenizer/bert_tokenization.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "gpt2_tokenization.py",
              "path": "pretrain/megatron/tokenizer/gpt2_tokenization.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "tokenizer.py",
              "path": "pretrain/megatron/tokenizer/tokenizer.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "training.py",
          "path": "pretrain/megatron/training.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "utils.py",
          "path": "pretrain/megatron/utils.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/__init__.py",
      "path": "pretrain/megatron/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/arguments.py",
      "path": "pretrain/megatron/arguments.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/checkpointing.py",
      "path": "pretrain/megatron/checkpointing.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/data",
      "path": "pretrain/megatron/data",
      "contents": [
        {
          "type": "file",
          "name": "Makefile",
          "path": "pretrain/megatron/data/Makefile",
          "extension": "no_extension"
        },
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/data/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "bert_dataset.py",
          "path": "pretrain/megatron/data/bert_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "blendable_dataset.py",
          "path": "pretrain/megatron/data/blendable_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "data_loaders.py",
          "path": "pretrain/megatron/data/data_loaders.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "dataset_utils.py",
          "path": "pretrain/megatron/data/dataset_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "gpt_dataset.py",
          "path": "pretrain/megatron/data/gpt_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "helpers.cpp",
          "path": "pretrain/megatron/data/helpers.cpp",
          "extension": ".cpp"
        },
        {
          "type": "file",
          "name": "ict_dataset.py",
          "path": "pretrain/megatron/data/ict_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "indexed_dataset.py",
          "path": "pretrain/megatron/data/indexed_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "realm_dataset_utils.py",
          "path": "pretrain/megatron/data/realm_dataset_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "realm_index.py",
          "path": "pretrain/megatron/data/realm_index.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "tape_dataset.py",
          "path": "pretrain/megatron/data/tape_dataset.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "test",
          "path": "pretrain/megatron/data/test",
          "contents": [
            {
              "type": "file",
              "name": "test_indexed_dataset.py",
              "path": "pretrain/megatron/data/test/test_indexed_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_preprocess_data.sh",
              "path": "pretrain/megatron/data/test/test_preprocess_data.sh",
              "extension": ".sh"
            }
          ]
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/Makefile",
      "path": "pretrain/megatron/data/Makefile",
      "extension": "no_extension"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/__init__.py",
      "path": "pretrain/megatron/data/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/bert_dataset.py",
      "path": "pretrain/megatron/data/bert_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/blendable_dataset.py",
      "path": "pretrain/megatron/data/blendable_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/data_loaders.py",
      "path": "pretrain/megatron/data/data_loaders.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/dataset_utils.py",
      "path": "pretrain/megatron/data/dataset_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/gpt_dataset.py",
      "path": "pretrain/megatron/data/gpt_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/helpers.cpp",
      "path": "pretrain/megatron/data/helpers.cpp",
      "extension": ".cpp"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/ict_dataset.py",
      "path": "pretrain/megatron/data/ict_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/indexed_dataset.py",
      "path": "pretrain/megatron/data/indexed_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/realm_dataset_utils.py",
      "path": "pretrain/megatron/data/realm_dataset_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/realm_index.py",
      "path": "pretrain/megatron/data/realm_index.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/tape_dataset.py",
      "path": "pretrain/megatron/data/tape_dataset.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/data/test",
      "path": "pretrain/megatron/data/test",
      "contents": [
        {
          "type": "file",
          "name": "test_indexed_dataset.py",
          "path": "pretrain/megatron/data/test/test_indexed_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_preprocess_data.sh",
          "path": "pretrain/megatron/data/test/test_preprocess_data.sh",
          "extension": ".sh"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/test/test_indexed_dataset.py",
      "path": "pretrain/megatron/data/test/test_indexed_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/data/test/test_preprocess_data.sh",
      "path": "pretrain/megatron/data/test/test_preprocess_data.sh",
      "extension": ".sh"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/fp16_deprecated",
      "path": "pretrain/megatron/fp16_deprecated",
      "contents": [
        {
          "type": "file",
          "name": "loss_scaler.py",
          "path": "pretrain/megatron/fp16_deprecated/loss_scaler.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fp16_deprecated/loss_scaler.py",
      "path": "pretrain/megatron/fp16_deprecated/loss_scaler.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/fused_kernels",
      "path": "pretrain/megatron/fused_kernels",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/fused_kernels/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "compat.h",
          "path": "pretrain/megatron/fused_kernels/compat.h",
          "extension": ".h"
        },
        {
          "type": "file",
          "name": "layer_norm_cuda.cpp",
          "path": "pretrain/megatron/fused_kernels/layer_norm_cuda.cpp",
          "extension": ".cpp"
        },
        {
          "type": "file",
          "name": "layer_norm_cuda_kernel.cu",
          "path": "pretrain/megatron/fused_kernels/layer_norm_cuda_kernel.cu",
          "extension": ".cu"
        },
        {
          "type": "file",
          "name": "scaled_masked_softmax.cpp",
          "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.cpp",
          "extension": ".cpp"
        },
        {
          "type": "file",
          "name": "scaled_masked_softmax.h",
          "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.h",
          "extension": ".h"
        },
        {
          "type": "file",
          "name": "scaled_masked_softmax_cuda.cu",
          "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax_cuda.cu",
          "extension": ".cu"
        },
        {
          "type": "file",
          "name": "scaled_upper_triang_masked_softmax.cpp",
          "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.cpp",
          "extension": ".cpp"
        },
        {
          "type": "file",
          "name": "scaled_upper_triang_masked_softmax.h",
          "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.h",
          "extension": ".h"
        },
        {
          "type": "file",
          "name": "scaled_upper_triang_masked_softmax_cuda.cu",
          "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax_cuda.cu",
          "extension": ".cu"
        },
        {
          "type": "file",
          "name": "type_shim.h",
          "path": "pretrain/megatron/fused_kernels/type_shim.h",
          "extension": ".h"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/__init__.py",
      "path": "pretrain/megatron/fused_kernels/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/compat.h",
      "path": "pretrain/megatron/fused_kernels/compat.h",
      "extension": ".h"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/layer_norm_cuda.cpp",
      "path": "pretrain/megatron/fused_kernels/layer_norm_cuda.cpp",
      "extension": ".cpp"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/layer_norm_cuda_kernel.cu",
      "path": "pretrain/megatron/fused_kernels/layer_norm_cuda_kernel.cu",
      "extension": ".cu"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/scaled_masked_softmax.cpp",
      "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.cpp",
      "extension": ".cpp"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/scaled_masked_softmax.h",
      "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax.h",
      "extension": ".h"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/scaled_masked_softmax_cuda.cu",
      "path": "pretrain/megatron/fused_kernels/scaled_masked_softmax_cuda.cu",
      "extension": ".cu"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.cpp",
      "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.cpp",
      "extension": ".cpp"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.h",
      "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax.h",
      "extension": ".h"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax_cuda.cu",
      "path": "pretrain/megatron/fused_kernels/scaled_upper_triang_masked_softmax_cuda.cu",
      "extension": ".cu"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/fused_kernels/type_shim.h",
      "path": "pretrain/megatron/fused_kernels/type_shim.h",
      "extension": ".h"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/global_vars.py",
      "path": "pretrain/megatron/global_vars.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/indexer.py",
      "path": "pretrain/megatron/indexer.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/initialize.py",
      "path": "pretrain/megatron/initialize.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/learning_rates.py",
      "path": "pretrain/megatron/learning_rates.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/memory.py",
      "path": "pretrain/megatron/memory.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/microbatches.py",
      "path": "pretrain/megatron/microbatches.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/model",
      "path": "pretrain/megatron/model",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/model/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "bert_model.py",
          "path": "pretrain/megatron/model/bert_model.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "classification.py",
          "path": "pretrain/megatron/model/classification.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "distributed.py",
          "path": "pretrain/megatron/model/distributed.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "fused_bias_gelu.py",
          "path": "pretrain/megatron/model/fused_bias_gelu.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "fused_layer_norm.py",
          "path": "pretrain/megatron/model/fused_layer_norm.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "fused_softmax.py",
          "path": "pretrain/megatron/model/fused_softmax.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "gpt_model.py",
          "path": "pretrain/megatron/model/gpt_model.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "language_model.py",
          "path": "pretrain/megatron/model/language_model.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "module.py",
          "path": "pretrain/megatron/model/module.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "multiple_choice.py",
          "path": "pretrain/megatron/model/multiple_choice.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "realm_model.py",
          "path": "pretrain/megatron/model/realm_model.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "token_classification.py",
          "path": "pretrain/megatron/model/token_classification.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "token_pair_classification.py",
          "path": "pretrain/megatron/model/token_pair_classification.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "transformer.py",
          "path": "pretrain/megatron/model/transformer.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "utils.py",
          "path": "pretrain/megatron/model/utils.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/__init__.py",
      "path": "pretrain/megatron/model/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/bert_model.py",
      "path": "pretrain/megatron/model/bert_model.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/classification.py",
      "path": "pretrain/megatron/model/classification.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/distributed.py",
      "path": "pretrain/megatron/model/distributed.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/fused_bias_gelu.py",
      "path": "pretrain/megatron/model/fused_bias_gelu.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/fused_layer_norm.py",
      "path": "pretrain/megatron/model/fused_layer_norm.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/fused_softmax.py",
      "path": "pretrain/megatron/model/fused_softmax.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/gpt_model.py",
      "path": "pretrain/megatron/model/gpt_model.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/language_model.py",
      "path": "pretrain/megatron/model/language_model.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/module.py",
      "path": "pretrain/megatron/model/module.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/multiple_choice.py",
      "path": "pretrain/megatron/model/multiple_choice.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/realm_model.py",
      "path": "pretrain/megatron/model/realm_model.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/token_classification.py",
      "path": "pretrain/megatron/model/token_classification.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/token_pair_classification.py",
      "path": "pretrain/megatron/model/token_pair_classification.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/transformer.py",
      "path": "pretrain/megatron/model/transformer.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/model/utils.py",
      "path": "pretrain/megatron/model/utils.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/mpu",
      "path": "pretrain/megatron/mpu",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/mpu/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "cross_entropy.py",
          "path": "pretrain/megatron/mpu/cross_entropy.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "data.py",
          "path": "pretrain/megatron/mpu/data.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "initialize.py",
          "path": "pretrain/megatron/mpu/initialize.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "layers.py",
          "path": "pretrain/megatron/mpu/layers.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "mappings.py",
          "path": "pretrain/megatron/mpu/mappings.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "random.py",
          "path": "pretrain/megatron/mpu/random.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "tests",
          "path": "pretrain/megatron/mpu/tests",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "pretrain/megatron/mpu/tests/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "commons.py",
              "path": "pretrain/megatron/mpu/tests/commons.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_cross_entropy.py",
              "path": "pretrain/megatron/mpu/tests/test_cross_entropy.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_data.py",
              "path": "pretrain/megatron/mpu/tests/test_data.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_initialize.py",
              "path": "pretrain/megatron/mpu/tests/test_initialize.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_layers.py",
              "path": "pretrain/megatron/mpu/tests/test_layers.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_random.py",
              "path": "pretrain/megatron/mpu/tests/test_random.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "utils.py",
          "path": "pretrain/megatron/mpu/utils.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/__init__.py",
      "path": "pretrain/megatron/mpu/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/cross_entropy.py",
      "path": "pretrain/megatron/mpu/cross_entropy.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/data.py",
      "path": "pretrain/megatron/mpu/data.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/initialize.py",
      "path": "pretrain/megatron/mpu/initialize.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/layers.py",
      "path": "pretrain/megatron/mpu/layers.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/mappings.py",
      "path": "pretrain/megatron/mpu/mappings.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/random.py",
      "path": "pretrain/megatron/mpu/random.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/mpu/tests",
      "path": "pretrain/megatron/mpu/tests",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/mpu/tests/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "commons.py",
          "path": "pretrain/megatron/mpu/tests/commons.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_cross_entropy.py",
          "path": "pretrain/megatron/mpu/tests/test_cross_entropy.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_data.py",
          "path": "pretrain/megatron/mpu/tests/test_data.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_initialize.py",
          "path": "pretrain/megatron/mpu/tests/test_initialize.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_layers.py",
          "path": "pretrain/megatron/mpu/tests/test_layers.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_random.py",
          "path": "pretrain/megatron/mpu/tests/test_random.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/__init__.py",
      "path": "pretrain/megatron/mpu/tests/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/commons.py",
      "path": "pretrain/megatron/mpu/tests/commons.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/test_cross_entropy.py",
      "path": "pretrain/megatron/mpu/tests/test_cross_entropy.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/test_data.py",
      "path": "pretrain/megatron/mpu/tests/test_data.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/test_initialize.py",
      "path": "pretrain/megatron/mpu/tests/test_initialize.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/test_layers.py",
      "path": "pretrain/megatron/mpu/tests/test_layers.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/tests/test_random.py",
      "path": "pretrain/megatron/mpu/tests/test_random.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/mpu/utils.py",
      "path": "pretrain/megatron/mpu/utils.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/optimizer",
      "path": "pretrain/megatron/optimizer",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/optimizer/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "clip_grads.py",
          "path": "pretrain/megatron/optimizer/clip_grads.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "grad_scaler.py",
          "path": "pretrain/megatron/optimizer/grad_scaler.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "optimizer.py",
          "path": "pretrain/megatron/optimizer/optimizer.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/optimizer/__init__.py",
      "path": "pretrain/megatron/optimizer/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/optimizer/clip_grads.py",
      "path": "pretrain/megatron/optimizer/clip_grads.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/optimizer/grad_scaler.py",
      "path": "pretrain/megatron/optimizer/grad_scaler.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/optimizer/optimizer.py",
      "path": "pretrain/megatron/optimizer/optimizer.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/package_info.py",
      "path": "pretrain/megatron/package_info.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/text_generation_utils.py",
      "path": "pretrain/megatron/text_generation_utils.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/megatron/tokenizer",
      "path": "pretrain/megatron/tokenizer",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "pretrain/megatron/tokenizer/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "bert_tokenization.py",
          "path": "pretrain/megatron/tokenizer/bert_tokenization.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "gpt2_tokenization.py",
          "path": "pretrain/megatron/tokenizer/gpt2_tokenization.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "tokenizer.py",
          "path": "pretrain/megatron/tokenizer/tokenizer.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/megatron/tokenizer/__init__.py",
      "path": "pretrain/megatron/tokenizer/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/tokenizer/bert_tokenization.py",
      "path": "pretrain/megatron/tokenizer/bert_tokenization.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/tokenizer/gpt2_tokenization.py",
      "path": "pretrain/megatron/tokenizer/gpt2_tokenization.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/tokenizer/tokenizer.py",
      "path": "pretrain/megatron/tokenizer/tokenizer.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/training.py",
      "path": "pretrain/megatron/training.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/megatron/utils.py",
      "path": "pretrain/megatron/utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/pretrain_tape.py",
      "path": "pretrain/pretrain_tape.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/pretrain_tools",
      "path": "pretrain/pretrain_tools",
      "contents": [
        {
          "type": "file",
          "name": "README.md",
          "path": "pretrain/pretrain_tools/README.md",
          "extension": ".md"
        },
        {
          "type": "file",
          "name": "mpirun_hidden1024_layer16_head16.sh",
          "path": "pretrain/pretrain_tools/mpirun_hidden1024_layer16_head16.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "pretrain_tape_distributed_hidden1024_layer16_head16.sh",
          "path": "pretrain/pretrain_tools/pretrain_tape_distributed_hidden1024_layer16_head16.sh",
          "extension": ".sh"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/pretrain_tools/README.md",
      "path": "pretrain/pretrain_tools/README.md",
      "extension": ".md"
    },
    {
      "type": "file",
      "name": "pretrain/pretrain_tools/mpirun_hidden1024_layer16_head16.sh",
      "path": "pretrain/pretrain_tools/mpirun_hidden1024_layer16_head16.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/pretrain_tools/pretrain_tape_distributed_hidden1024_layer16_head16.sh",
      "path": "pretrain/pretrain_tools/pretrain_tape_distributed_hidden1024_layer16_head16.sh",
      "extension": ".sh"
    },
    {
      "type": "directory",
      "name": "pretrain/protein_tools",
      "path": "pretrain/protein_tools",
      "contents": [
        {
          "type": "file",
          "name": "README.md",
          "path": "pretrain/protein_tools/README.md",
          "extension": ".md"
        },
        {
          "type": "file",
          "name": "iupac_vocab.txt",
          "path": "pretrain/protein_tools/iupac_vocab.txt",
          "extension": ".txt"
        },
        {
          "type": "file",
          "name": "lmdb2tab.py",
          "path": "pretrain/protein_tools/lmdb2tab.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "pfam2json.sh",
          "path": "pretrain/protein_tools/pfam2json.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "preprocess_tape.sh",
          "path": "pretrain/protein_tools/preprocess_tape.sh",
          "extension": ".sh"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/protein_tools/README.md",
      "path": "pretrain/protein_tools/README.md",
      "extension": ".md"
    },
    {
      "type": "file",
      "name": "pretrain/protein_tools/iupac_vocab.txt",
      "path": "pretrain/protein_tools/iupac_vocab.txt",
      "extension": ".txt"
    },
    {
      "type": "file",
      "name": "pretrain/protein_tools/lmdb2tab.py",
      "path": "pretrain/protein_tools/lmdb2tab.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/protein_tools/pfam2json.sh",
      "path": "pretrain/protein_tools/pfam2json.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/protein_tools/preprocess_tape.sh",
      "path": "pretrain/protein_tools/preprocess_tape.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "pretrain/requirements.txt",
      "path": "pretrain/requirements.txt",
      "extension": ".txt"
    },
    {
      "type": "file",
      "name": "pretrain/setup.py",
      "path": "pretrain/setup.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tasks",
      "path": "pretrain/tasks",
      "contents": [
        {
          "type": "file",
          "name": "data_utils.py",
          "path": "pretrain/tasks/data_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "ensemble_classifier.py",
          "path": "pretrain/tasks/ensemble_classifier.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "eval_utils.py",
          "path": "pretrain/tasks/eval_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "finetune_utils.py",
          "path": "pretrain/tasks/finetune_utils.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "glue",
          "path": "pretrain/tasks/glue",
          "contents": [
            {
              "type": "file",
              "name": "data.py",
              "path": "pretrain/tasks/glue/data.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "finetune.py",
              "path": "pretrain/tasks/glue/finetune.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "mnli.py",
              "path": "pretrain/tasks/glue/mnli.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "qqp.py",
              "path": "pretrain/tasks/glue/qqp.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "main.py",
          "path": "pretrain/tasks/main.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "protein",
          "path": "pretrain/tasks/protein",
          "contents": [
            {
              "type": "file",
              "name": "contact_prediction.py",
              "path": "pretrain/tasks/protein/contact_prediction.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "data.py",
              "path": "pretrain/tasks/protein/data.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "eval_utils.py",
              "path": "pretrain/tasks/protein/eval_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "finetune.py",
              "path": "pretrain/tasks/protein/finetune.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "finetune_utils.py",
              "path": "pretrain/tasks/protein/finetune_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "fluorescence.py",
              "path": "pretrain/tasks/protein/fluorescence.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "remote_homology.py",
              "path": "pretrain/tasks/protein/remote_homology.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "secondary_structure.py",
              "path": "pretrain/tasks/protein/secondary_structure.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "stability.py",
              "path": "pretrain/tasks/protein/stability.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "directory",
          "name": "race",
          "path": "pretrain/tasks/race",
          "contents": [
            {
              "type": "file",
              "name": "data.py",
              "path": "pretrain/tasks/race/data.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "finetune.py",
              "path": "pretrain/tasks/race/finetune.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "directory",
          "name": "zeroshot_gpt2",
          "path": "pretrain/tasks/zeroshot_gpt2",
          "contents": [
            {
              "type": "file",
              "name": "datasets.py",
              "path": "pretrain/tasks/zeroshot_gpt2/datasets.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "detokenizer.py",
              "path": "pretrain/tasks/zeroshot_gpt2/detokenizer.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "evaluate.py",
              "path": "pretrain/tasks/zeroshot_gpt2/evaluate.py",
              "extension": ".py"
            }
          ]
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tasks/data_utils.py",
      "path": "pretrain/tasks/data_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/ensemble_classifier.py",
      "path": "pretrain/tasks/ensemble_classifier.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/eval_utils.py",
      "path": "pretrain/tasks/eval_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/finetune_utils.py",
      "path": "pretrain/tasks/finetune_utils.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tasks/glue",
      "path": "pretrain/tasks/glue",
      "contents": [
        {
          "type": "file",
          "name": "data.py",
          "path": "pretrain/tasks/glue/data.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "finetune.py",
          "path": "pretrain/tasks/glue/finetune.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "mnli.py",
          "path": "pretrain/tasks/glue/mnli.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "qqp.py",
          "path": "pretrain/tasks/glue/qqp.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tasks/glue/data.py",
      "path": "pretrain/tasks/glue/data.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/glue/finetune.py",
      "path": "pretrain/tasks/glue/finetune.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/glue/mnli.py",
      "path": "pretrain/tasks/glue/mnli.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/glue/qqp.py",
      "path": "pretrain/tasks/glue/qqp.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/main.py",
      "path": "pretrain/tasks/main.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tasks/protein",
      "path": "pretrain/tasks/protein",
      "contents": [
        {
          "type": "file",
          "name": "contact_prediction.py",
          "path": "pretrain/tasks/protein/contact_prediction.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "data.py",
          "path": "pretrain/tasks/protein/data.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "eval_utils.py",
          "path": "pretrain/tasks/protein/eval_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "finetune.py",
          "path": "pretrain/tasks/protein/finetune.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "finetune_utils.py",
          "path": "pretrain/tasks/protein/finetune_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "fluorescence.py",
          "path": "pretrain/tasks/protein/fluorescence.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "remote_homology.py",
          "path": "pretrain/tasks/protein/remote_homology.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "secondary_structure.py",
          "path": "pretrain/tasks/protein/secondary_structure.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "stability.py",
          "path": "pretrain/tasks/protein/stability.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/contact_prediction.py",
      "path": "pretrain/tasks/protein/contact_prediction.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/data.py",
      "path": "pretrain/tasks/protein/data.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/eval_utils.py",
      "path": "pretrain/tasks/protein/eval_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/finetune.py",
      "path": "pretrain/tasks/protein/finetune.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/finetune_utils.py",
      "path": "pretrain/tasks/protein/finetune_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/fluorescence.py",
      "path": "pretrain/tasks/protein/fluorescence.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/remote_homology.py",
      "path": "pretrain/tasks/protein/remote_homology.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/secondary_structure.py",
      "path": "pretrain/tasks/protein/secondary_structure.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/protein/stability.py",
      "path": "pretrain/tasks/protein/stability.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tasks/race",
      "path": "pretrain/tasks/race",
      "contents": [
        {
          "type": "file",
          "name": "data.py",
          "path": "pretrain/tasks/race/data.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "finetune.py",
          "path": "pretrain/tasks/race/finetune.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tasks/race/data.py",
      "path": "pretrain/tasks/race/data.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/race/finetune.py",
      "path": "pretrain/tasks/race/finetune.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tasks/zeroshot_gpt2",
      "path": "pretrain/tasks/zeroshot_gpt2",
      "contents": [
        {
          "type": "file",
          "name": "datasets.py",
          "path": "pretrain/tasks/zeroshot_gpt2/datasets.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "detokenizer.py",
          "path": "pretrain/tasks/zeroshot_gpt2/detokenizer.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "evaluate.py",
          "path": "pretrain/tasks/zeroshot_gpt2/evaluate.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tasks/zeroshot_gpt2/datasets.py",
      "path": "pretrain/tasks/zeroshot_gpt2/datasets.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/zeroshot_gpt2/detokenizer.py",
      "path": "pretrain/tasks/zeroshot_gpt2/detokenizer.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tasks/zeroshot_gpt2/evaluate.py",
      "path": "pretrain/tasks/zeroshot_gpt2/evaluate.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tools",
      "path": "pretrain/tools",
      "contents": [
        {
          "type": "file",
          "name": "create_doc_index.py",
          "path": "pretrain/tools/create_doc_index.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "generate_samples_gpt.py",
          "path": "pretrain/tools/generate_samples_gpt.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "linter.py",
          "path": "pretrain/tools/linter.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "merge_mp_partitions.py",
          "path": "pretrain/tools/merge_mp_partitions.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "openwebtext",
          "path": "pretrain/tools/openwebtext",
          "contents": [
            {
              "type": "file",
              "name": "README.md",
              "path": "pretrain/tools/openwebtext/README.md",
              "extension": ".md"
            },
            {
              "type": "file",
              "name": "blacklist_urls.py",
              "path": "pretrain/tools/openwebtext/blacklist_urls.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "cleanup_dataset.py",
              "path": "pretrain/tools/openwebtext/cleanup_dataset.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "find_duplicates.py",
              "path": "pretrain/tools/openwebtext/find_duplicates.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "group_duplicate_url.py",
              "path": "pretrain/tools/openwebtext/group_duplicate_url.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "merge_jsons.py",
              "path": "pretrain/tools/openwebtext/merge_jsons.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "remove_group_duplicates.py",
              "path": "pretrain/tools/openwebtext/remove_group_duplicates.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "preprocess_data.py",
          "path": "pretrain/tools/preprocess_data.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tools/create_doc_index.py",
      "path": "pretrain/tools/create_doc_index.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/generate_samples_gpt.py",
      "path": "pretrain/tools/generate_samples_gpt.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/linter.py",
      "path": "pretrain/tools/linter.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/merge_mp_partitions.py",
      "path": "pretrain/tools/merge_mp_partitions.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "pretrain/tools/openwebtext",
      "path": "pretrain/tools/openwebtext",
      "contents": [
        {
          "type": "file",
          "name": "README.md",
          "path": "pretrain/tools/openwebtext/README.md",
          "extension": ".md"
        },
        {
          "type": "file",
          "name": "blacklist_urls.py",
          "path": "pretrain/tools/openwebtext/blacklist_urls.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "cleanup_dataset.py",
          "path": "pretrain/tools/openwebtext/cleanup_dataset.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "find_duplicates.py",
          "path": "pretrain/tools/openwebtext/find_duplicates.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "group_duplicate_url.py",
          "path": "pretrain/tools/openwebtext/group_duplicate_url.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "merge_jsons.py",
          "path": "pretrain/tools/openwebtext/merge_jsons.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "remove_group_duplicates.py",
          "path": "pretrain/tools/openwebtext/remove_group_duplicates.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/README.md",
      "path": "pretrain/tools/openwebtext/README.md",
      "extension": ".md"
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/blacklist_urls.py",
      "path": "pretrain/tools/openwebtext/blacklist_urls.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/cleanup_dataset.py",
      "path": "pretrain/tools/openwebtext/cleanup_dataset.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/find_duplicates.py",
      "path": "pretrain/tools/openwebtext/find_duplicates.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/group_duplicate_url.py",
      "path": "pretrain/tools/openwebtext/group_duplicate_url.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/merge_jsons.py",
      "path": "pretrain/tools/openwebtext/merge_jsons.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/openwebtext/remove_group_duplicates.py",
      "path": "pretrain/tools/openwebtext/remove_group_duplicates.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "pretrain/tools/preprocess_data.py",
      "path": "pretrain/tools/preprocess_data.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "tape",
      "path": "tape",
      "contents": [
        {
          "type": "file",
          "name": ".gitignore",
          "path": "tape/.gitignore",
          "extension": "no_extension"
        },
        {
          "type": "file",
          "name": "MANIFEST.in",
          "path": "tape/MANIFEST.in",
          "extension": ".in"
        },
        {
          "type": "file",
          "name": "README.md",
          "path": "tape/README.md",
          "extension": ".md"
        },
        {
          "type": "file",
          "name": "TAPE.LICENSE",
          "path": "tape/TAPE.LICENSE",
          "extension": ".license"
        },
        {
          "type": "file",
          "name": "clean_checkpoints.sh",
          "path": "tape/clean_checkpoints.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "cleanup_results.sh",
          "path": "tape/cleanup_results.sh",
          "extension": ".sh"
        },
        {
          "type": "directory",
          "name": "conda_env",
          "path": "tape/conda_env",
          "contents": [
            {
              "type": "file",
              "name": "base.yaml",
              "path": "tape/conda_env/base.yaml",
              "extension": ".yaml"
            },
            {
              "type": "file",
              "name": "torch1.7.yaml",
              "path": "tape/conda_env/torch1.7.yaml",
              "extension": ".yaml"
            }
          ]
        },
        {
          "type": "directory",
          "name": "config",
          "path": "tape/config",
          "contents": [
            {
              "type": "file",
              "name": "resnet_config.json",
              "path": "tape/config/resnet_config.json",
              "extension": ".json"
            },
            {
              "type": "file",
              "name": "transformer_config.json",
              "path": "tape/config/transformer_config.json",
              "extension": ".json"
            },
            {
              "type": "file",
              "name": "transformer_tiny_config.json",
              "path": "tape/config/transformer_tiny_config.json",
              "extension": ".json"
            }
          ]
        },
        {
          "type": "directory",
          "name": "converter",
          "path": "tape/converter",
          "contents": [
            {
              "type": "file",
              "name": "config.json",
              "path": "tape/converter/config.json",
              "extension": ".json"
            },
            {
              "type": "file",
              "name": "megatron-converter.py",
              "path": "tape/converter/megatron-converter.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "data_refs.bib",
          "path": "tape/data_refs.bib",
          "extension": ".bib"
        },
        {
          "type": "directory",
          "name": "deprecated",
          "path": "tape/deprecated",
          "contents": [
            {
              "type": "file",
              "name": "converter.py",
              "path": "tape/deprecated/converter.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_bert.py",
              "path": "tape/deprecated/modeling_bert.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "download_data.sh",
          "path": "tape/download_data.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "download_data_aws.sh",
          "path": "tape/download_data_aws.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "environment.yml",
          "path": "tape/environment.yml",
          "extension": ".yml"
        },
        {
          "type": "directory",
          "name": "examples",
          "path": "tape/examples",
          "contents": [
            {
              "type": "file",
              "name": "adding_model.py",
              "path": "tape/examples/adding_model.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "adding_task.py",
              "path": "tape/examples/adding_task.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "gridsearch_config.json",
          "path": "tape/gridsearch_config.json",
          "extension": ".json"
        },
        {
          "type": "file",
          "name": "mypy.ini",
          "path": "tape/mypy.ini",
          "extension": ".ini"
        },
        {
          "type": "file",
          "name": "requirements.txt",
          "path": "tape/requirements.txt",
          "extension": ".txt"
        },
        {
          "type": "directory",
          "name": "scripts",
          "path": "tape/scripts",
          "contents": [
            {
              "type": "file",
              "name": "fix_lmdb.py",
              "path": "tape/scripts/fix_lmdb.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "generate_plots.py",
              "path": "tape/scripts/generate_plots.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "lmdb_to_fasta.py",
              "path": "tape/scripts/lmdb_to_fasta.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "shells",
              "path": "tape/scripts/shells",
              "contents": [
                {
                  "type": "file",
                  "name": "activate_base.sh",
                  "path": "tape/scripts/shells/activate_base.sh",
                  "extension": ".sh"
                },
                {
                  "type": "file",
                  "name": "activate_torch1.7.sh",
                  "path": "tape/scripts/shells/activate_torch1.7.sh",
                  "extension": ".sh"
                },
                {
                  "type": "file",
                  "name": "megatron-tape-generator.sh",
                  "path": "tape/scripts/shells/megatron-tape-generator.sh",
                  "extension": ".sh"
                },
                {
                  "type": "file",
                  "name": "para.sh",
                  "path": "tape/scripts/shells/para.sh",
                  "extension": ".sh"
                },
                {
                  "type": "file",
                  "name": "test.sh",
                  "path": "tape/scripts/shells/test.sh",
                  "extension": ".sh"
                }
              ]
            },
            {
              "type": "file",
              "name": "tfrecord_to_json.py",
              "path": "tape/scripts/tfrecord_to_json.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "tfrecord_to_lmdb.py",
              "path": "tape/scripts/tfrecord_to_lmdb.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "setup.py",
          "path": "tape/setup.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "tape",
          "path": "tape/tape",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "tape/tape/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "datasets.py",
              "path": "tape/tape/datasets.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "errors.py",
              "path": "tape/tape/errors.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "main.py",
              "path": "tape/tape/main.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "metrics.py",
              "path": "tape/tape/metrics.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "models",
              "path": "tape/tape/models",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "tape/tape/models/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "file_utils.py",
                  "path": "tape/tape/models/file_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_bert.py",
                  "path": "tape/tape/models/modeling_bert.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_lstm.py",
                  "path": "tape/tape/models/modeling_lstm.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_onehot.py",
                  "path": "tape/tape/models/modeling_onehot.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_resnet.py",
                  "path": "tape/tape/models/modeling_resnet.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_trrosetta.py",
                  "path": "tape/tape/models/modeling_trrosetta.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_unirep.py",
                  "path": "tape/tape/models/modeling_unirep.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "modeling_utils.py",
                  "path": "tape/tape/models/modeling_utils.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "optimization.py",
              "path": "tape/tape/optimization.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "registry.py",
              "path": "tape/tape/registry.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "tokenizers.py",
              "path": "tape/tape/tokenizers.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "training.py",
              "path": "tape/tape/training.py",
              "extension": ".py"
            },
            {
              "type": "directory",
              "name": "utils",
              "path": "tape/tape/utils",
              "contents": [
                {
                  "type": "file",
                  "name": "__init__.py",
                  "path": "tape/tape/utils/__init__.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "_sampler.py",
                  "path": "tape/tape/utils/_sampler.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "distributed_utils.py",
                  "path": "tape/tape/utils/distributed_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "setup_utils.py",
                  "path": "tape/tape/utils/setup_utils.py",
                  "extension": ".py"
                },
                {
                  "type": "file",
                  "name": "utils.py",
                  "path": "tape/tape/utils/utils.py",
                  "extension": ".py"
                }
              ]
            },
            {
              "type": "file",
              "name": "visualization.py",
              "path": "tape/tape/visualization.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "tape_eval.py",
          "path": "tape/tape_eval.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "tape_train.py",
          "path": "tape/tape_train.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "tests",
          "path": "tape/tests",
          "contents": [
            {
              "type": "file",
              "name": "test_basic.py",
              "path": "tape/tests/test_basic.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "test_forceDownload.py",
              "path": "tape/tests/test_forceDownload.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "tox.ini",
          "path": "tape/tox.ini",
          "extension": ".ini"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/.gitignore",
      "path": "tape/.gitignore",
      "extension": "no_extension"
    },
    {
      "type": "file",
      "name": "tape/MANIFEST.in",
      "path": "tape/MANIFEST.in",
      "extension": ".in"
    },
    {
      "type": "file",
      "name": "tape/README.md",
      "path": "tape/README.md",
      "extension": ".md"
    },
    {
      "type": "file",
      "name": "tape/TAPE.LICENSE",
      "path": "tape/TAPE.LICENSE",
      "extension": ".license"
    },
    {
      "type": "file",
      "name": "tape/clean_checkpoints.sh",
      "path": "tape/clean_checkpoints.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/cleanup_results.sh",
      "path": "tape/cleanup_results.sh",
      "extension": ".sh"
    },
    {
      "type": "directory",
      "name": "tape/conda_env",
      "path": "tape/conda_env",
      "contents": [
        {
          "type": "file",
          "name": "base.yaml",
          "path": "tape/conda_env/base.yaml",
          "extension": ".yaml"
        },
        {
          "type": "file",
          "name": "torch1.7.yaml",
          "path": "tape/conda_env/torch1.7.yaml",
          "extension": ".yaml"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/conda_env/base.yaml",
      "path": "tape/conda_env/base.yaml",
      "extension": ".yaml"
    },
    {
      "type": "file",
      "name": "tape/conda_env/torch1.7.yaml",
      "path": "tape/conda_env/torch1.7.yaml",
      "extension": ".yaml"
    },
    {
      "type": "directory",
      "name": "tape/config",
      "path": "tape/config",
      "contents": [
        {
          "type": "file",
          "name": "resnet_config.json",
          "path": "tape/config/resnet_config.json",
          "extension": ".json"
        },
        {
          "type": "file",
          "name": "transformer_config.json",
          "path": "tape/config/transformer_config.json",
          "extension": ".json"
        },
        {
          "type": "file",
          "name": "transformer_tiny_config.json",
          "path": "tape/config/transformer_tiny_config.json",
          "extension": ".json"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/config/resnet_config.json",
      "path": "tape/config/resnet_config.json",
      "extension": ".json"
    },
    {
      "type": "file",
      "name": "tape/config/transformer_config.json",
      "path": "tape/config/transformer_config.json",
      "extension": ".json"
    },
    {
      "type": "file",
      "name": "tape/config/transformer_tiny_config.json",
      "path": "tape/config/transformer_tiny_config.json",
      "extension": ".json"
    },
    {
      "type": "directory",
      "name": "tape/converter",
      "path": "tape/converter",
      "contents": [
        {
          "type": "file",
          "name": "config.json",
          "path": "tape/converter/config.json",
          "extension": ".json"
        },
        {
          "type": "file",
          "name": "megatron-converter.py",
          "path": "tape/converter/megatron-converter.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/converter/config.json",
      "path": "tape/converter/config.json",
      "extension": ".json"
    },
    {
      "type": "file",
      "name": "tape/converter/megatron-converter.py",
      "path": "tape/converter/megatron-converter.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/data_refs.bib",
      "path": "tape/data_refs.bib",
      "extension": ".bib"
    },
    {
      "type": "directory",
      "name": "tape/deprecated",
      "path": "tape/deprecated",
      "contents": [
        {
          "type": "file",
          "name": "converter.py",
          "path": "tape/deprecated/converter.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_bert.py",
          "path": "tape/deprecated/modeling_bert.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/deprecated/converter.py",
      "path": "tape/deprecated/converter.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/deprecated/modeling_bert.py",
      "path": "tape/deprecated/modeling_bert.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/download_data.sh",
      "path": "tape/download_data.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/download_data_aws.sh",
      "path": "tape/download_data_aws.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/environment.yml",
      "path": "tape/environment.yml",
      "extension": ".yml"
    },
    {
      "type": "directory",
      "name": "tape/examples",
      "path": "tape/examples",
      "contents": [
        {
          "type": "file",
          "name": "adding_model.py",
          "path": "tape/examples/adding_model.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "adding_task.py",
          "path": "tape/examples/adding_task.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/examples/adding_model.py",
      "path": "tape/examples/adding_model.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/examples/adding_task.py",
      "path": "tape/examples/adding_task.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/gridsearch_config.json",
      "path": "tape/gridsearch_config.json",
      "extension": ".json"
    },
    {
      "type": "file",
      "name": "tape/mypy.ini",
      "path": "tape/mypy.ini",
      "extension": ".ini"
    },
    {
      "type": "file",
      "name": "tape/requirements.txt",
      "path": "tape/requirements.txt",
      "extension": ".txt"
    },
    {
      "type": "directory",
      "name": "tape/scripts",
      "path": "tape/scripts",
      "contents": [
        {
          "type": "file",
          "name": "fix_lmdb.py",
          "path": "tape/scripts/fix_lmdb.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "generate_plots.py",
          "path": "tape/scripts/generate_plots.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "lmdb_to_fasta.py",
          "path": "tape/scripts/lmdb_to_fasta.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "shells",
          "path": "tape/scripts/shells",
          "contents": [
            {
              "type": "file",
              "name": "activate_base.sh",
              "path": "tape/scripts/shells/activate_base.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "activate_torch1.7.sh",
              "path": "tape/scripts/shells/activate_torch1.7.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "megatron-tape-generator.sh",
              "path": "tape/scripts/shells/megatron-tape-generator.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "para.sh",
              "path": "tape/scripts/shells/para.sh",
              "extension": ".sh"
            },
            {
              "type": "file",
              "name": "test.sh",
              "path": "tape/scripts/shells/test.sh",
              "extension": ".sh"
            }
          ]
        },
        {
          "type": "file",
          "name": "tfrecord_to_json.py",
          "path": "tape/scripts/tfrecord_to_json.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "tfrecord_to_lmdb.py",
          "path": "tape/scripts/tfrecord_to_lmdb.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/scripts/fix_lmdb.py",
      "path": "tape/scripts/fix_lmdb.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/scripts/generate_plots.py",
      "path": "tape/scripts/generate_plots.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/scripts/lmdb_to_fasta.py",
      "path": "tape/scripts/lmdb_to_fasta.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "tape/scripts/shells",
      "path": "tape/scripts/shells",
      "contents": [
        {
          "type": "file",
          "name": "activate_base.sh",
          "path": "tape/scripts/shells/activate_base.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "activate_torch1.7.sh",
          "path": "tape/scripts/shells/activate_torch1.7.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "megatron-tape-generator.sh",
          "path": "tape/scripts/shells/megatron-tape-generator.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "para.sh",
          "path": "tape/scripts/shells/para.sh",
          "extension": ".sh"
        },
        {
          "type": "file",
          "name": "test.sh",
          "path": "tape/scripts/shells/test.sh",
          "extension": ".sh"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/scripts/shells/activate_base.sh",
      "path": "tape/scripts/shells/activate_base.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/scripts/shells/activate_torch1.7.sh",
      "path": "tape/scripts/shells/activate_torch1.7.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/scripts/shells/megatron-tape-generator.sh",
      "path": "tape/scripts/shells/megatron-tape-generator.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/scripts/shells/para.sh",
      "path": "tape/scripts/shells/para.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/scripts/shells/test.sh",
      "path": "tape/scripts/shells/test.sh",
      "extension": ".sh"
    },
    {
      "type": "file",
      "name": "tape/scripts/tfrecord_to_json.py",
      "path": "tape/scripts/tfrecord_to_json.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/scripts/tfrecord_to_lmdb.py",
      "path": "tape/scripts/tfrecord_to_lmdb.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/setup.py",
      "path": "tape/setup.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "tape/tape",
      "path": "tape/tape",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "tape/tape/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "datasets.py",
          "path": "tape/tape/datasets.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "errors.py",
          "path": "tape/tape/errors.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "main.py",
          "path": "tape/tape/main.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "metrics.py",
          "path": "tape/tape/metrics.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "models",
          "path": "tape/tape/models",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "tape/tape/models/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "file_utils.py",
              "path": "tape/tape/models/file_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_bert.py",
              "path": "tape/tape/models/modeling_bert.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_lstm.py",
              "path": "tape/tape/models/modeling_lstm.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_onehot.py",
              "path": "tape/tape/models/modeling_onehot.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_resnet.py",
              "path": "tape/tape/models/modeling_resnet.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_trrosetta.py",
              "path": "tape/tape/models/modeling_trrosetta.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_unirep.py",
              "path": "tape/tape/models/modeling_unirep.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "modeling_utils.py",
              "path": "tape/tape/models/modeling_utils.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "optimization.py",
          "path": "tape/tape/optimization.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "registry.py",
          "path": "tape/tape/registry.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "tokenizers.py",
          "path": "tape/tape/tokenizers.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "training.py",
          "path": "tape/tape/training.py",
          "extension": ".py"
        },
        {
          "type": "directory",
          "name": "utils",
          "path": "tape/tape/utils",
          "contents": [
            {
              "type": "file",
              "name": "__init__.py",
              "path": "tape/tape/utils/__init__.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "_sampler.py",
              "path": "tape/tape/utils/_sampler.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "distributed_utils.py",
              "path": "tape/tape/utils/distributed_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "setup_utils.py",
              "path": "tape/tape/utils/setup_utils.py",
              "extension": ".py"
            },
            {
              "type": "file",
              "name": "utils.py",
              "path": "tape/tape/utils/utils.py",
              "extension": ".py"
            }
          ]
        },
        {
          "type": "file",
          "name": "visualization.py",
          "path": "tape/tape/visualization.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/tape/__init__.py",
      "path": "tape/tape/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/datasets.py",
      "path": "tape/tape/datasets.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/errors.py",
      "path": "tape/tape/errors.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/main.py",
      "path": "tape/tape/main.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/metrics.py",
      "path": "tape/tape/metrics.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "tape/tape/models",
      "path": "tape/tape/models",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "tape/tape/models/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "file_utils.py",
          "path": "tape/tape/models/file_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_bert.py",
          "path": "tape/tape/models/modeling_bert.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_lstm.py",
          "path": "tape/tape/models/modeling_lstm.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_onehot.py",
          "path": "tape/tape/models/modeling_onehot.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_resnet.py",
          "path": "tape/tape/models/modeling_resnet.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_trrosetta.py",
          "path": "tape/tape/models/modeling_trrosetta.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_unirep.py",
          "path": "tape/tape/models/modeling_unirep.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "modeling_utils.py",
          "path": "tape/tape/models/modeling_utils.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/tape/models/__init__.py",
      "path": "tape/tape/models/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/file_utils.py",
      "path": "tape/tape/models/file_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_bert.py",
      "path": "tape/tape/models/modeling_bert.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_lstm.py",
      "path": "tape/tape/models/modeling_lstm.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_onehot.py",
      "path": "tape/tape/models/modeling_onehot.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_resnet.py",
      "path": "tape/tape/models/modeling_resnet.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_trrosetta.py",
      "path": "tape/tape/models/modeling_trrosetta.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_unirep.py",
      "path": "tape/tape/models/modeling_unirep.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/models/modeling_utils.py",
      "path": "tape/tape/models/modeling_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/optimization.py",
      "path": "tape/tape/optimization.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/registry.py",
      "path": "tape/tape/registry.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/tokenizers.py",
      "path": "tape/tape/tokenizers.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/training.py",
      "path": "tape/tape/training.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "tape/tape/utils",
      "path": "tape/tape/utils",
      "contents": [
        {
          "type": "file",
          "name": "__init__.py",
          "path": "tape/tape/utils/__init__.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "_sampler.py",
          "path": "tape/tape/utils/_sampler.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "distributed_utils.py",
          "path": "tape/tape/utils/distributed_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "setup_utils.py",
          "path": "tape/tape/utils/setup_utils.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "utils.py",
          "path": "tape/tape/utils/utils.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/tape/utils/__init__.py",
      "path": "tape/tape/utils/__init__.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/utils/_sampler.py",
      "path": "tape/tape/utils/_sampler.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/utils/distributed_utils.py",
      "path": "tape/tape/utils/distributed_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/utils/setup_utils.py",
      "path": "tape/tape/utils/setup_utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/utils/utils.py",
      "path": "tape/tape/utils/utils.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape/visualization.py",
      "path": "tape/tape/visualization.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape_eval.py",
      "path": "tape/tape_eval.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tape_train.py",
      "path": "tape/tape_train.py",
      "extension": ".py"
    },
    {
      "type": "directory",
      "name": "tape/tests",
      "path": "tape/tests",
      "contents": [
        {
          "type": "file",
          "name": "test_basic.py",
          "path": "tape/tests/test_basic.py",
          "extension": ".py"
        },
        {
          "type": "file",
          "name": "test_forceDownload.py",
          "path": "tape/tests/test_forceDownload.py",
          "extension": ".py"
        }
      ]
    },
    {
      "type": "file",
      "name": "tape/tests/test_basic.py",
      "path": "tape/tests/test_basic.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tests/test_forceDownload.py",
      "path": "tape/tests/test_forceDownload.py",
      "extension": ".py"
    },
    {
      "type": "file",
      "name": "tape/tox.ini",
      "path": "tape/tox.ini",
      "extension": ".ini"
    }
  ],
  "summary": {
    "file_count": 731,
    "directory_count": 85,
    "max_depth": 4,
    "file_types": {
      "no_extension": 13,
      ".md": 15,
      ".in": 4,
      ".license": 4,
      ".sh": 87,
      ".png": 6,
      ".tex": 3,
      ".py": 520,
      ".cpp": 16,
      ".h": 16,
      ".cu": 12,
      ".txt": 7,
      ".yaml": 6,
      ".json": 14,
      ".bib": 2,
      ".yml": 2,
      ".ini": 4
    }
  }
}